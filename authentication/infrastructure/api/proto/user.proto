syntax = "proto3";
package pb;

import "google/protobuf/timestamp.proto";

option go_package = "./pb";

// AuthService defines authentication-related RPCs.
service AuthService {
    rpc Login (LoginRequest) returns (LoginResponse);
    rpc Register (RegisterRequest) returns (RegisterResponse);
    rpc VerifyUser (VerifyUserRequest) returns (VerifyUserResponse);
    rpc ResendOtp (ResendOtpRequest) returns (ResendOtpResponse);
    rpc GetUser (GetUserRequest) returns (GetUserResponse);
    rpc LogOut (LogOutRequest) returns (LogOutResponse);
    rpc OAuthLogin (OAuthLoginRequest) returns (OAuthLoginResponse);
    rpc OAuthRegister (OAuthRegisterRequest) returns (OAuthRegisterResponse);

}

// User entity with core user details.
message User {
    string user_id = 1;
    string email = 2;
    string full_name = 3;
    string password = 4;
    string role = 5;
    string phone = 6;
    google.protobuf.Timestamp updated_at = 7;
    google.protobuf.Timestamp created_at = 8;
}

// Session entity containing token information.
message Session {
    string token = 1;
    google.protobuf.Timestamp expires_at = 2;
}

// Login RPC messages.
message LoginRequest {
    string email = 1;
    string password = 2;
}

message LoginResponse {
    User user = 1;
    Session session = 2;
}

// Register RPC messages.
message RegisterRequest {
    string email = 1;
    string password = 2;
    string full_name = 3;
    string role = 4;
    string phone = 5;
}

message RegisterResponse {
    User user = 1;
}

// VerifyUser RPC messages.
message VerifyUserRequest {
    string email = 1;
    string otp = 2;
}

message VerifyUserResponse {
    bool valid = 1;
}

// ResendOtp RPC messages.
message ResendOtpRequest {
    string email = 1;
}

message ResendOtpResponse {
    string message = 1;
}

// GetUser RPC messages.
message GetUserRequest {
    string user_id = 1;
}

message GetUserResponse {
    User user = 1;
}

// LogOut RPC messages.
message LogOutRequest {
    string user_id = 1;
}

message LogOutResponse {
    string message = 1;
}

// OAuth Login messages
message OAuthLoginRequest {
    string provider = 1; 
    string token = 2;    
}

message OAuthLoginResponse {
    User user = 1;
    Session session = 2;
}

// OAuth Register messages (same as Login)
message OAuthRegisterRequest {
    string provider = 1;
    string token = 2;
}

message OAuthRegisterResponse {
    User user = 1;
    Session session = 2;
}
